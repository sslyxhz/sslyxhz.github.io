<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[Android系统客制化]]></title>
      <url>/2018-02-03-Android%E5%AE%A2%E5%88%B6%E5%8C%96/</url>
      <content type="html"><![CDATA[<p>整理记录在android上的客制化调整。</p>
<a id="more"></a>
<h1 id="系统层面"><a href="#系统层面" class="headerlink" title="系统层面"></a>系统层面</h1><h2 id="更换开机LOGO"><a href="#更换开机LOGO" class="headerlink" title="更换开机LOGO"></a>更换开机LOGO</h2><h3 id="前方案"><a href="#前方案" class="headerlink" title="前方案"></a>前方案</h3><ol>
<li>找一张图片，分辨率为：1920×1080，这里以linuxlogo.png为例；</li>
<li><p>换格式，用以下命令(如工具未安装可用以下指令安装：</p>
 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install netpbm</span><br><span class="line">pngtopnm linuxlogo.png &gt; linuxlogo.pnm</span><br><span class="line">pnmquant 224 linuxlogo.pnm &gt; linuxlogo224.pnm</span><br><span class="line">pnmtoplainpnm linuxlogo224.pnm &gt; logo_linux_clut224.ppm</span><br></pre></td></tr></table></figure>
</li>
<li><p>logo_linux_clut224.ppm替换文件：kernel/drivers/video/logo/logo_linux_clut224.ppm</p>
<ul>
<li>重新编译内核，把生成的kernel.img烧进板子即可。</li>
<li>注意：如果你的boot.img中包含了kernel，记得重新烧一个没有kernel的boot.img，或者重新编译boot.img</li>
</ul>
</li>
</ol>
<h3 id="后方案"><a href="#后方案" class="headerlink" title="后方案"></a>后方案</h3><p>前方案失效，尝试直接替换kernel下的图片就行了，简单粗暴。</p>
<h2 id="开机动画"><a href="#开机动画" class="headerlink" title="开机动画"></a>开机动画</h2><ol>
<li>找15张图片(不一定要15张的，但最好是1080P的)，按顺序命名，如10001.png、10002.png、1003.png。</li>
<li>把命名好的图片放到一个文件夹中，part0</li>
<li>创建一个文档，名字为：desc.txt  (名称固定！)</li>
<li><p>在创建的文档中写入以下内容：</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1920 1080 15</span><br><span class="line">p 0 0 part0</span><br></pre></td></tr></table></figure>
<ul>
<li>第一行是指动画文件的宽度，长度，每秒播放帧数。受到机器的影响，一般开机CPU满负荷运行，开始的一段时间播放帧数会低于设定帧数，所以前一段的动画的设计需要考虑到这一点。</li>
<li>第二行，p指标识符，0代表无限循环，0代表阶段间隔时间为0，part0代表对应文件夹名称。如果两个文件夹可以这么写<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1920 1080 15</span><br><span class="line">p 1 0 part0</span><br><span class="line">p 0 0 part1</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li><p>压缩：选中图片文件夹part0和desc.txt（windows下打包前将图片文件夹中的Thumbs.db删除），然后右键选择WINRAR的”添加到压缩文件”进入自定义压缩文件设置：压缩文件格式选择：ZIP，压缩方式必须选择：存储（否则动画显示不出来），名字为bootanimation.zip，关机动画名称为shutdownanimation.zip。<br> <img src="/2018-02-03-Android客制化/zip_bootanimation.png" alt="zip_bootanimation"></p>
</li>
<li><p>编译版本集成：<br>找一个确定会编译到的mk文件</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 如device/rockchip/rk3288/rk3288.mk, 加入开机动画包</span><br><span class="line">PRODUCT_COPY_FILES += device/rockchip/rk3288/bootanimation.zip:system/media/bootanimation.zip</span><br><span class="line"></span><br><span class="line"># 参考: device/leadcore/common/device.mk</span><br><span class="line">PRODUCT_COPY_FILES +=/framework/base/cmds/bootanimation/bootanimation.zip:/system/media/bootanimation.zip</span><br></pre></td></tr></table></figure>
</li>
<li><p>重新编译上层，把生成的固件烧入板子即可。</p>
</li>
<li>可以考虑直接替换/system/media/bootanimation.zip查看效果。</li>
</ol>
<h1 id="应用层面"><a href="#应用层面" class="headerlink" title="应用层面"></a>应用层面</h1>]]></content>
      
        <categories>
            
            <category> 记录 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> android </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[JNI Notes]]></title>
      <url>/2018-02-03-JNI-Notes/</url>
      <content type="html"><![CDATA[<p>整理记录对JNI的认知过程。</p>
<a id="more"></a>
<h1 id="JNI角色定位"><a href="#JNI角色定位" class="headerlink" title="JNI角色定位"></a>JNI角色定位</h1><p>JNI作为一种双向接口，即允许Java应用程序调用原生代码，也允许原生代码调用Java代码。</p>
<p><img src="/2018-02-03-JNI-Notes/jni_role.png" alt="jni_role"></p>
<h1 id="JNI数据结构和参数"><a href="#JNI数据结构和参数" class="headerlink" title="JNI数据结构和参数"></a>JNI数据结构和参数</h1><p>JNI提供两种主要数据结构，”JavaVM“和”JNIEnv“，其本质上都是指向函数表指针的指针。</p>
<h2 id="JavaVM"><a href="#JavaVM" class="headerlink" title="JavaVM"></a>JavaVM</h2><ul>
<li>JavaVM是JVM在JNI层的代表，JNI全局只有一个；JNIEnv是线程中的代表，每个线程都有一个，JNI中可能有多个JNIEnv。</li>
<li>JavaVM提供执行接口函数，使用这些函数可以创建和销毁JavaVM。</li>
</ul>
<h2 id="JNIEnv"><a href="#JNIEnv" class="headerlink" title="JNIEnv"></a>JNIEnv</h2><p>JNIEnv是线程相关的结构体，代表Java在本线程的运行环境。JNIEnv作用：</p>
<ul>
<li>调用Java函数:JNIEnv代表Java运行环境, 可以使用JNIEnv调用Java中的代码;</li>
<li>操作Java对象:Java对象传入JNI层就是Jobject对象, 需要使用JNIEnv来操作这个Java对象;</li>
<li>JNIEnv提供大多数的JNI函数，作为native函数的第一个参数。第二个参数取决于native方法是否是静态，如果是非静态则是对对象的引用，如果是静态，则是对它class类的引用。</li>
<li>JNIEnv接口指针，指向一个线程相关的结构，该结构包含了指向函数表的指针，函数表的每个入口包含一个指向JNI函数的指针。</li>
<li>JNIEnv用于线程本地存储，因此不能在线程之间共享JNIEnv变量。如果一个线程无法获取它的JNIEnv参数，那么应该共享JavaVM参数，然后使用函数GetEnv获取线程的JNIEnv。</li>
</ul>
<h2 id="示意图"><a href="#示意图" class="headerlink" title="示意图"></a>示意图</h2><p><img src="/2018-02-03-JNI-Notes/jni_struct.png" alt="jni_struct"></p>
<p>JNI函数表的组成就像是C++的虚函数表，虚拟机可以运行多张函数表。</p>
<p>Native方法的参数，总比Java函数声明多出两个,如(JNIEnv *, jobject, jstring);</p>
<ul>
<li>若原生函数不是静态函数，则第二个参数对应调用该原生函数的Java对象；</li>
<li>如果该原生函数是静态函数，则第二个参数对应调用该原生函数的Java类。</li>
</ul>
<h1 id="JNI线程"><a href="#JNI线程" class="headerlink" title="JNI线程"></a>JNI线程</h1><p>Native代码执行在其调入的Java方法所在的调用栈中。</p>
<p>Native代码实在Native层实现的方法，调用栈从Java层开始直到Native，JNI不会改变调用栈，也不会改变线程环境，除非开发者指定改变。</p>
<p>在Native使用pthread开启新线程，又需要与Java层通信，需要先将线程attach到JNI环境，否则findClass都不会找到相应的类。attach本地创建的线程，会创建一个java.lang.Thread对象，并添加到主线程组中。已attach的线程上调用AttachCurrentThread是多余的。</p>
<p>步骤：</p>
<ol>
<li>调用AttachCurrentThread将线程attach到JVM。已经attach的线程再调用AttachCurrentThread是多余的空操作。</li>
<li>在该线程中范文Java类、方法和对象，生成JVM的Global引用，即NewGlobalRef来保存引用。注意引用要及时删除，JVM中存放这些引用的表存在容量限制。</li>
<li>完成与Java的通信之后要调用DetachCurrentThread完成detach。</li>
</ol>
<p>Android不会挂起正在执行本地代码的线程，如果当前垃圾回收器正在运行，或者调试器遇到问题需要挂起，Android在下次JNI调用时才会暂停线程。</p>
<p><strong>jclass，jmethodID，jfieldID</strong></p>
<ul>
<li>使用FindClass获取类，以及类的对象</li>
<li>使用GetFieldID获取属性、方法的ID</li>
<li>使用GetIntField等合适的方法，或者对于属性、方法ID的值</li>
</ul>
<p>类的引用、方法、属性ID在类卸载之前都是有效的。需要时应该调用NewGlobalRef保存jclass的引用。</p>
<h1 id="版本兼容性"><a href="#版本兼容性" class="headerlink" title="版本兼容性"></a>版本兼容性</h1><p>SDK开发时指定minsdk，targetsdk可以尽可能高。</p>
<p>NDK只能用一个android-target指定最低的版本要求，限制了在NDK中能使用的API范围。</p>
<p>最好保证NDK中的android-target与minsdk保持一致。在NDK中没有使用高版本API却指定了较高的targetsdk，编译时将链接到高版本的库，可能导致问题。</p>
<p>因为高版本的某些API实现方式会改变。比如signal.h中的signal函数，如果使用android-21编译，那么在低于5.0 版本的手机上是跑不起来，错误是无法找到signal函数，原因就是5.0以后signal.h中的signal函数的实现方式变了。</p>
<h1 id="性能差异"><a href="#性能差异" class="headerlink" title="性能差异"></a>性能差异</h1><p>native方法访问java方法，native方法访问native方法，java方法访问java方法</p>
<p>某译者粗略测试统计，</p>
<p>java-native调用比java-java方法慢2-3倍</p>
<p>native-java调用比java-java方法慢10倍</p>
<p>总结：如果不是有特别的需要，最好不要让native方法调用java方法，开销太大。然而访问java层的属性就没有这么大的区别，可以忽略不计。</p>
<h1 id="程序错误检测"><a href="#程序错误检测" class="headerlink" title="程序错误检测"></a>程序错误检测</h1><p>JNI不对空指针或非法参数类型等错误进行检测，因为：</p>
<ul>
<li>检查所有可能的错误会降低方法执行的性能</li>
<li>在很多时候，没有足够的运行时信息去进行检测</li>
</ul>
<p>程序员不得传递一个非法指针或者错误的类型给JNI函数，否则可能会导致系统异常货虚拟机崩溃</p>
<h1 id="Java异常"><a href="#Java异常" class="headerlink" title="Java异常"></a>Java异常</h1><p>JNI允许本地方法抛出处理任何异常，也可以处理Java中抛出的异常，剩下没有处理的异常会继续给VM处理</p>
<h2 id="异常和错误码"><a href="#异常和错误码" class="headerlink" title="异常和错误码"></a>异常和错误码</h2><p>大多数情况下，JNI提供的方法通过返回错误码或者抛出java异常来处理错误，因此，程序中可以：</p>
<ul>
<li>检查JNI函数返回值</li>
<li>调用ExceptionOccurred()方法，获取方法中抛出的异常</li>
</ul>
<p>有两种情况下，程序需要优先检测java异常而不是先检测返回码</p>
<ul>
<li>通过JNI调用Java方法的时候，需要ExceptionOccurred()检测是否在Java方法中抛出了异常</li>
<li>一些访问数组的方法，它不返回错误码，但是会抛出ArrayIndexOutOfBoundsException 或者 ArrayStoreException异常</li>
</ul>
<h2 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h2><p>有两种方法可以在本地方法中处理异常</p>
<ul>
<li>检测到异常的时候立即返回，异常将会在调用该本地代码的地方抛出</li>
<li>在本地方法中调用ExceptionClear()清除异常，处理接下来的逻辑</li>
</ul>
<p>异常抛出的时，本地方法需清除异常后，才能继续调用其他JNI接口方法，有异常发生后，只有以下方法才能被安全调用：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">ExceptionOccurred()</span><br><span class="line">ExceptionDescribe()</span><br><span class="line">ExceptionClear()</span><br><span class="line">ExceptionCheck()</span><br><span class="line">ReleaseStringChars()</span><br><span class="line">ReleaseStringUTFChars()</span><br><span class="line">ReleaseStringCritical()</span><br><span class="line">Release&lt;Type&gt;ArrayElements()</span><br><span class="line">ReleasePrimitiveArrayCritical()</span><br><span class="line">DeleteLocalRef()</span><br><span class="line">DeleteGlobalRef()</span><br><span class="line">DeleteWeakGlobalRef()</span><br><span class="line">MonitorExit()</span><br><span class="line">PushLocalFrame()</span><br><span class="line">PopLocalFrame()</span><br></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> notes </category>
            
        </categories>
        
        
        <tags>
            
            <tag> android </tag>
            
            <tag> jni </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Android System Tips]]></title>
      <url>/2018-02-03-Android-System-Tips/</url>
      <content type="html"><![CDATA[<p>整理记录在Android系统的一些操作。</p>
<a id="more"></a>
<h1 id="通用行为"><a href="#通用行为" class="headerlink" title="通用行为"></a>通用行为</h1><h2 id="Wifi连接识别"><a href="#Wifi连接识别" class="headerlink" title="Wifi连接识别"></a>Wifi连接识别</h2><h3 id="root设备设置"><a href="#root设备设置" class="headerlink" title="root设备设置"></a>root设备设置</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">adb root</span><br><span class="line">adb remount</span><br><span class="line">adb shell busybox vi system/build.prop</span><br><span class="line"><span class="meta">#</span> 添加命令</span><br><span class="line">service.adb.tcp.port=5555</span><br><span class="line"><span class="meta">#</span> 设备重启</span><br><span class="line">reboot</span><br></pre></td></tr></table></figure>
<h3 id="系统启动脚本"><a href="#系统启动脚本" class="headerlink" title="系统启动脚本"></a>系统启动脚本</h3><p>在init.rc中添加设置。</p>
<h1 id="硬件相关"><a href="#硬件相关" class="headerlink" title="硬件相关"></a>硬件相关</h1><h2 id="USB接线识别"><a href="#USB接线识别" class="headerlink" title="USB接线识别"></a>USB接线识别</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install android-tools-adb      # 安装 adb 工具</span><br><span class="line"></span><br><span class="line">mkdir -p ~/.android</span><br><span class="line">vi ~/.android/adb_usb.ini                   # 添加一行设备标识 0x2207</span><br><span class="line"></span><br><span class="line">sudo vi /etc/udev/rules.d/51-android.rules</span><br><span class="line"><span class="meta">#</span> 加入udev规则，添加以下一行：</span><br><span class="line"><span class="meta">#</span> SUBSYSTEM=="usb", ATTR&#123;idVendor&#125;=="2207", MODE="0666"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 刷新规则，重新拔插数据线，或者运行以下命令</span><br><span class="line">sudo udevadm control --reload-rules</span><br><span class="line">sudo udevadm trigger</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 重启</span><br><span class="line">sudo adb kill-server</span><br><span class="line">adb start-server</span><br></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> tips </category>
            
        </categories>
        
        
        <tags>
            
            <tag> android </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Ubuntu Tips]]></title>
      <url>/2018-01-28-Ubuntu-Tips/</url>
      <content type="html"><![CDATA[<p>记录在Ubuntu上用到的一些操作。</p>
<a id="more"></a>
<h1 id="tips-应用篇"><a href="#tips-应用篇" class="headerlink" title="tips-应用篇"></a>tips-应用篇</h1><h2 id="下载百度云网盘文件"><a href="#下载百度云网盘文件" class="headerlink" title="下载百度云网盘文件"></a>下载百度云网盘文件</h2><p>实测wget可用，速度维持在70~100kb；aria2失败；<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -c --referer=&quot;百度云分享链接&quot; -O 保存的文件名 &quot;百度云实际下载地址&quot;</span><br></pre></td></tr></table></figure></p>
<p>参考：<a href="http://blog.csdn.net/cuihaolong/article/details/78625507" target="_blank" rel="noopener">http://blog.csdn.net/cuihaolong/article/details/78625507</a></p>
<h2 id="ZSSH文件传输"><a href="#ZSSH文件传输" class="headerlink" title="ZSSH文件传输"></a>ZSSH文件传输</h2><h3 id="上传本地文件到服务器"><a href="#上传本地文件到服务器" class="headerlink" title="上传本地文件到服务器"></a>上传本地文件到服务器</h3><p>在服务器上先cd至相应要放上传文件的目录之后<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">rz -bye                 # 在远程服务器的相应目录上运行此命令,表示做好接收文件的准备</span><br><span class="line">ctrl+@                  # 运行上面命令后,会出现一些乱码字符,不要怕,按此组合键,进入zssh</span><br><span class="line">zssh &gt;                  # 这里切换到了本地机器</span><br><span class="line">zssh &gt; pwd              # 看一下本地机器的目录在那</span><br><span class="line">zssh &gt; ls               # 看一下有那些文件</span><br><span class="line">zssh &gt; sz 123.txt       # 上传本地机器的当前目录的123.txt到远程机器的当前目录</span><br></pre></td></tr></table></figure></p>
<h3 id="下载服务器文件到本地"><a href="#下载服务器文件到本地" class="headerlink" title="下载服务器文件到本地"></a>下载服务器文件到本地</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sz filename             # 在远程机器上,启动sz, 准备发送文件</span><br><span class="line">ctrl+@                  # 看到一堆乱码,不要怕,这会按下组合键</span><br><span class="line">zssh &gt; pwd              # 看看在那个目录,cd 切换到合适的目录</span><br><span class="line">zssh &gt; rz -bye          # 接住对应的文件</span><br></pre></td></tr></table></figure>
<p>参考：<a href="https://www.bbsmax.com/A/o75N40WzW3/" target="_blank" rel="noopener">https://www.bbsmax.com/A/o75N40WzW3/</a></p>
<h2 id="桌面分享"><a href="#桌面分享" class="headerlink" title="桌面分享"></a>桌面分享</h2><ol>
<li>Dash, Desktop Sharing，allow desktop sharing.</li>
<li>sudo apt-get install dconf-editor</li>
<li>dconf-editor</li>
<li>org-&gt;gnome-&gt;desktop-&gt;remote-access, set option requre-encryption false</li>
<li>run vnc viewer in windows</li>
</ol>
<h1 id="tips-系统篇"><a href="#tips-系统篇" class="headerlink" title="tips-系统篇"></a>tips-系统篇</h1><h2 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 1. 添加用户</span><br><span class="line">sudo adduser xxx</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 2. 管理员权限</span><br><span class="line">sudo vim /etc/sudoers</span><br><span class="line">root ALL=(ALL) ALL</span><br><span class="line">xxx ALL=(ALL) ALL</span><br></pre></td></tr></table></figure>
<h2 id="配置DNS服务地址"><a href="#配置DNS服务地址" class="headerlink" title="配置DNS服务地址"></a>配置DNS服务地址</h2><p>安装ubuntu16.04，网卡驱动加载但无法联网，配置dns服务器地址后正常。<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/network/interfaces</span><br><span class="line"><span class="meta">#</span> 1.添加dns-nameserver 114.114.114.114</span><br><span class="line"></span><br><span class="line">vi /etc/resolvconf/resolv.conf.d/base</span><br><span class="line"><span class="meta">#</span> 2. 追加nameserver 114.114.114.114</span><br><span class="line"></span><br><span class="line">vi /etc/resolv.conf</span><br><span class="line"><span class="meta">#</span> 3. 添加 nameserver 114.114.114.114</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 4. 重启网络</span><br></pre></td></tr></table></figure></p>
<h2 id="主目录中文转英文"><a href="#主目录中文转英文" class="headerlink" title="主目录中文转英文"></a>主目录中文转英文</h2><p>有几次装了中文版Ubuntu系统，主目录下默认是中文名称目录，于是有了转回英文目录名称的想法。<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">export LANG=en_US</span><br><span class="line">xdg-user-dirs-gtk-update  # 弹窗询问是否将目录转化为英文路径,同意并关闭.</span><br><span class="line"></span><br><span class="line">export LANG=zh_CN</span><br><span class="line"><span class="meta">#</span> 关闭终端,并注销或重启.</span><br><span class="line"><span class="meta">#</span> 下次进入系统,系统会提示是否把转化好的目录改回中文.选择不许要并且勾上不再提示,并取消修改.主目录的中文转英文就完成了</span><br></pre></td></tr></table></figure></p>
<h2 id="切换命令行模式"><a href="#切换命令行模式" class="headerlink" title="切换命令行模式"></a>切换命令行模式</h2><h3 id="动态切换命令行模式"><a href="#动态切换命令行模式" class="headerlink" title="动态切换命令行模式"></a>动态切换命令行模式</h3><ul>
<li>图形桌面—&gt;命令行模式：Ctrl+Alt+F1/F2/F3/F4/F5/F6</li>
<li>命令行模式—&gt;图形桌面：Ctrl+Alt+F7</li>
<li>解除命令行模式锁定光标快捷键：Ctrl+Alt</li>
</ul>
<h3 id="默认命令行模式"><a href="#默认命令行模式" class="headerlink" title="默认命令行模式"></a>默认命令行模式</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /etc/default/grub</span><br><span class="line"><span class="meta">#</span> 注释掉 GRUB_CMDLINE_LINUX_DEFAULT=”quiet” 这行</span><br><span class="line"><span class="meta">#</span> 把GRUB_CMDLINE_LINUX=”" 改为 GRUB_CMDLINE_LINUX=”text”</span><br><span class="line"><span class="meta">#</span> 去掉 #GRUB_TERMINAL=console 的注释，即 GRUB_TERMINAL=console</span><br><span class="line"></span><br><span class="line">sudo update-grub</span><br><span class="line"></span><br><span class="line">sudo systemctl set-default multi-user.target # 开机后进入命令行界面</span><br><span class="line"><span class="meta">#</span>sudo systemctl set-default graphical.target # 开机后进入图形界面</span><br><span class="line"></span><br><span class="line">sudo reboot</span><br><span class="line"></span><br><span class="line">sudo systemctl start lightdm # 切换回来  startx</span><br></pre></td></tr></table></figure>
<h2 id="安装桌面环境"><a href="#安装桌面环境" class="headerlink" title="安装桌面环境"></a>安装桌面环境</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 法一</span><br><span class="line">sudo apt-get install xfce4</span><br><span class="line">sudo apt-get install xubuntu-desktop # 较多其他安装包</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 法二</span><br><span class="line">sudo apt-get install gnome-desktop-environment </span><br><span class="line"><span class="meta">#</span> or: sudo apt-get install ubuntu-desktop**</span><br><span class="line"><span class="meta">#</span> or: sudo apt-get install —no-install-recommends ubuntu-desktop</span><br><span class="line"><span class="meta">#</span> then, reboot</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 法三</span><br><span class="line">sudo apt-get install xinit</span><br><span class="line">sudo apt-get install gdm</span><br><span class="line">sudo apt-get install kubuntu-desktop</span><br><span class="line">sudo apt-get install —no-install-recommends kubuntu-desktop</span><br></pre></td></tr></table></figure>
<h1 id="tips-巨坑篇"><a href="#tips-巨坑篇" class="headerlink" title="tips-巨坑篇"></a>tips-巨坑篇</h1><h2 id="在某HP台式机上安装Ubuntu14-04的坑"><a href="#在某HP台式机上安装Ubuntu14-04的坑" class="headerlink" title="在某HP台式机上安装Ubuntu14.04的坑"></a>在某HP台式机上安装Ubuntu14.04的坑</h2><h3 id="desc"><a href="#desc" class="headerlink" title="desc"></a>desc</h3><p>Ubuntu14.04使用USB安装时，出现”install ubuntu/ try ubuntu without installation”选择，但是Enter安装时，显示器没有内容显示，片刻之后直接休眠。</p>
<h3 id="reason"><a href="#reason" class="headerlink" title="reason"></a>reason</h3><p>由于ubuntu对于显卡支持有问题，需要手动添加显卡驱动选项，启动的时候告诉内核不要加载显卡。</p>
<ul>
<li>无效一，有的说是UEFI的问题，关了UEFI不行；</li>
<li>无效二，有的说是N卡不兼容，禁用了显卡还不行。<h3 id="solution"><a href="#solution" class="headerlink" title="solution"></a>solution</h3><h4 id="step-1"><a href="#step-1" class="headerlink" title="step 1"></a>step 1</h4>安装时选择”install ubuntu”后，按”e”进入编辑模式，进入命令行模式, 然后去掉”—“后，依照不同显卡进行不同显卡驱动选项的添加<br>1.Intel 82852/82855 或8系列显示晶片：i915.modeset=1或i915.modeset=0<br>2.Nvidia：<strong>nomodeset</strong><br>3.其它厂牌(如ATI，技嘉)：xforcevesa或radeon.modeset=0 xforcevesa<br>[DELL T3400显卡为Nvidia FX580，选择nomodeset]<br>F10安装<h4 id="step-2"><a href="#step-2" class="headerlink" title="step 2"></a>step 2</h4>当安装结束后，启动系统出现黑画面<br>1.开机，进入grub画面(如果硬碟没有别的OS,请开机时按住shift不放才会有grub画面)<br><strong> (然而就是卡在这一步，没有grub画面！折腾了两次修复grub的设置都是失败，不然后面的都是一样了。)<br>2.按’’’e’’’ 进入编辑开机指令的模式, 同样找到’’’quite splash’’’ 并在后面加上对应的字。<br>3.按 ‘’F10’’启动系统.<br>4.进去系统之后编辑’’’/etc/default/grub’’’ 这个档案(要管理者权限sudo)。<br>Ubuntu&gt;打开终端机，输入sudo vi /etc/default/grub<br>5.找到这一行:<br>GRUB_CMDLINE_LINUX_DEFAULT=”quiet splash”<br>修改为：<br>GRUB_CMDLINE_LINUX_DEFAULT=”quiet splash </strong>nomodeset**”</li>
</ul>
<ol>
<li>更新GRUB： sudo update-grub<br>7.存档，并重新开机。<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3></li>
</ol>
<ul>
<li><a href="http://www.linuxidc.com/Linux/2017-01/139318.htm" target="_blank" rel="noopener">Ubuntu安装时出现黑屏问题的解决</a></li>
<li><a href="http://blog.csdn.net/ubunfans/article/details/46544175/" target="_blank" rel="noopener">Windows7硬盘安装Ubuntu14.04引导后黑屏解决方案</a></li>
</ul>
]]></content>
      
        <categories>
            
            <category> tips </category>
            
        </categories>
        
        
        <tags>
            
            <tag> ubuntu </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Leanote源码部署记录]]></title>
      <url>/2017-12-10-Leanote%E6%BA%90%E7%A0%81%E9%83%A8%E7%BD%B2/</url>
      <content type="html"><![CDATA[<p>Leanote，开源笔记，在苛求数据安全的时候就得自建笔记服务了。</p>
<a id="more"></a>
<h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><ul>
<li>go1.9.2.linux-amd64.tar.gz<br>  地址：<a href="https://pan.baidu.com/s/1hs1qX5i" target="_blank" rel="noopener">https://pan.baidu.com/s/1hs1qX5i</a></li>
<li>leanote-all-master.zip<br>  地址：<a href="https://pan.baidu.com/s/1eRJvFkY" target="_blank" rel="noopener">https://pan.baidu.com/s/1eRJvFkY</a></li>
<li>mongodb-linux-x86_64-3.0.1.gz<br>  地址：<a href="https://pan.baidu.com/s/1i4MD2M5" target="_blank" rel="noopener">https://pan.baidu.com/s/1i4MD2M5</a><br>  或：<a href="https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-3.0.1.tgz" target="_blank" rel="noopener">https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-3.0.1.tgz</a></li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 下载百度云分享文件</span><br><span class="line">$&gt; wget -c  —referer=http://pan.baidu.com/s/xxxx -O  filename &quot;url&quot;</span><br></pre></td></tr></table></figure>
<h1 id="安装golang"><a href="#安装golang" class="headerlink" title="安装golang"></a>安装golang</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$&gt; cd /home/xhz/leanote</span><br><span class="line">$&gt; tar -xzvf go1.9.2.linux-amd64.tar.gz</span><br><span class="line"></span><br><span class="line">$&gt; mkdir /home/xhz/leanote/gopackage</span><br><span class="line">$&gt; sudo vim /etc/profile</span><br><span class="line">export GOROOT=/home/xhz/leanote/go</span><br><span class="line">export GOPATH=/home/xhz/leanote/gopackage</span><br><span class="line">export PATH=$PATH:$GOROOT/bin:$GOPATH/bin</span><br><span class="line">$&gt; source /etc/profile</span><br><span class="line"></span><br><span class="line"># test</span><br><span class="line">$&gt; go version</span><br></pre></td></tr></table></figure>
<h1 id="获取Revel和Leanote的源码"><a href="#获取Revel和Leanote的源码" class="headerlink" title="获取Revel和Leanote的源码"></a>获取Revel和Leanote的源码</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$&gt; cd /home/xhz/leanote</span><br><span class="line">$&gt; unzip leanote-all-master.zip</span><br><span class="line">$&gt; cp -R leanote-all-master/src/ gopackage/</span><br><span class="line"></span><br><span class="line">$&gt; go install github.com/revel/cmd/revel</span><br></pre></td></tr></table></figure>
<h1 id="安装Mongodb"><a href="#安装Mongodb" class="headerlink" title="安装Mongodb"></a>安装Mongodb</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"># 解压缩</span><br><span class="line">$&gt; mv mongodb-linux-x86_64-3.0.1.gz mongodb-linux-x86_64-3.0.1.tgz</span><br><span class="line">$&gt; tar -xzvf mongodb-linux-x86_64-3.0.1.tgz</span><br><span class="line"></span><br><span class="line"># 设置环境变量</span><br><span class="line">$&gt; sudo vim /etc/profile</span><br><span class="line">export PATH=$PATH:/home/xhz/leanote/mongodb-linux-x86_64-3.0.1/bin</span><br><span class="line">$&gt; source /etc/profile</span><br><span class="line"></span><br><span class="line"># 启动mongodb, 加载初始数据</span><br><span class="line">$&gt; mkdir /home/xhz/leanote/data</span><br><span class="line">$&gt; mongod --dbpath /home/xhz/leanote/data</span><br><span class="line">$&gt; mongorestore -h localhost -d leanote --dir /home/xhz/leanote/gopackage/src/github.com/leanote/leanote/mongodb_backup/leanote_install_data</span><br><span class="line"></span><br><span class="line">$&gt; mongo</span><br><span class="line">&gt; show dbs #　查看数据库</span><br><span class="line">leanote	0.203125GB</span><br><span class="line">local	0.078125GB</span><br><span class="line">&gt; use leanote # 切换到leanote</span><br><span class="line">switched to db leanote</span><br><span class="line">&gt; show collections # 查看表</span><br><span class="line">files</span><br><span class="line">has_share_notes</span><br><span class="line">note_content_histories</span><br><span class="line">note_contents</span><br><span class="line">....</span><br></pre></td></tr></table></figure>
<h1 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$&gt; revel run github.com/leanote/leanote</span><br></pre></td></tr></table></figure>
<p>访问：<a href="http://localhost:9000" target="_blank" rel="noopener">http://localhost:9000</a><br><a href="http://10.4.230.97:9000/" target="_blank" rel="noopener">http://10.4.230.97:9000/</a></p>
<p>user1 username: admin, password: abc123<br>user2 username: demo@leanote.com, password: demo@leanote.com (仅供体验使用)</p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://github.com/leanote/leanote/wiki/Leanote-%E6%BA%90%E7%A0%81%E7%89%88%E8%AF%A6%E7%BB%86%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B----Mac-and-Linux" target="_blank" rel="noopener">https://github.com/leanote/leanote/wiki/Leanote-%E6%BA%90%E7%A0%81%E7%89%88%E8%AF%A6%E7%BB%86%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B----Mac-and-Linux</a></p>
]]></content>
      
        <categories>
            
            <category> 记录 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> software </tag>
            
            <tag> 挖坑 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Firefly-RK3399编译记录]]></title>
      <url>/2017-11-17-Firefly-RK3399%E7%BC%96%E8%AF%91%E8%AE%B0%E5%BD%95/</url>
      <content type="html"><![CDATA[<p>一块板子一份源码二话不说就是怼，南墙不挡头铁。</p>
<a id="more"></a>
<h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><h2 id="操作系统"><a href="#操作系统" class="headerlink" title="操作系统"></a>操作系统</h2><ul>
<li>推荐64位Ubuntu，<a href="http://www.ubuntu.org.cn/download/desktop" target="_blank" rel="noopener"><a href="http://www.ubuntu.org.cn/download/desktop" target="_blank" rel="noopener">官网</a></a></li>
<li>以UltraISO写入U盘，bios设置优先启动进行安装，略。</li>
</ul>
<h2 id="换源"><a href="#换源" class="headerlink" title="换源"></a>换源</h2><p>提高国内下载速度（惯用我科 <a href="https://lug.ustc.edu.cn/wiki/mirrors/help/ubuntu）" target="_blank" rel="noopener">https://lug.ustc.edu.cn/wiki/mirrors/help/ubuntu）</a><br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 法一：</span><br><span class="line">sudo sed -i 's/archive.ubuntu.com/mirrors.ustc.edu.cn/g' /etc/apt/sources.list</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 法二：</span><br><span class="line"><span class="meta">#</span> 直接编辑 /etc/apt/sources.list 文件，在开头添加：</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释</span><br><span class="line">deb https://mirrors.ustc.edu.cn/ubuntu/ xenial main restricted universe multiverse</span><br><span class="line"><span class="meta">#</span> deb-src https://mirrors.ustc.edu.cn/ubuntu/ xenial main main restricted universe multiverse</span><br><span class="line">deb https://mirrors.ustc.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse</span><br><span class="line"><span class="meta">#</span> deb-src https://mirrors.ustc.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse</span><br><span class="line">deb https://mirrors.ustc.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse</span><br><span class="line"><span class="meta">#</span> deb-src https://mirrors.ustc.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse</span><br><span class="line">deb https://mirrors.ustc.edu.cn/ubuntu/ xenial-security main restricted universe multiverse</span><br><span class="line"><span class="meta">#</span> deb-src https://mirrors.ustc.edu.cn/ubuntu/ xenial-security main restricted universe multiverse</span><br><span class="line"><span class="meta">#</span> 预发布软件源，不建议启用</span><br><span class="line"><span class="meta">#</span> deb https://mirrors.ustc.edu.cn/ubuntu/ xenial-proposed main restricted universe multiverse</span><br><span class="line"><span class="meta">#</span> deb-src https://mirrors.ustc.edu.cn/ubuntu/ xenial-proposed main restricted universe multiverse</span><br></pre></td></tr></table></figure></p>
<h2 id="设置JDK"><a href="#设置JDK" class="headerlink" title="设置JDK"></a>设置JDK</h2><p>Openjdk，需要另外添加该源。<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository ppa:openjdk-r/ppa</span><br><span class="line"><span class="meta">#</span> 当add-apt-repository不可用，执行sudo apt-get install software-properties-common</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install openjdk-7-jdk      # 6.0用openjdk-7</span><br><span class="line"><span class="meta">#</span> sudo apt-get install openjdk-8-jdk    # 7.1.1用openjdk-8</span><br></pre></td></tr></table></figure></p>
<p>安装结束后输入java、javac、java -version验证是否设置完毕，如果出现问题需要追加配置信息：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> sudo gedit /etc/profile</span><br><span class="line"><span class="meta">#</span> 以下内容追加在文件末尾</span><br><span class="line">export JAVA_HOME=/usr/lib/jvm/java-7-openjdk-amd64</span><br><span class="line">export JRE_HOME=$&#123;JAVA_HOME&#125;/jre </span><br><span class="line">export CLASSPATH=.:$&#123;JAVA_HOME&#125;/lib:$&#123;JRE_HOME&#125;/lib </span><br><span class="line">export PATH=$&#123;JAVA_HOME&#125;/bin:$PATH</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> source /etc/profile      # 刷新</span><br></pre></td></tr></table></figure></p>
<h2 id="环境依赖"><a href="#环境依赖" class="headerlink" title="环境依赖"></a>环境依赖</h2><p>编译Android系统，需要依赖以下项目，<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> Ubuntu14.04，Android6.0</span><br><span class="line">sudo apt-get install git-core gnupg flex bison gperf libsdl1.2-dev \</span><br><span class="line">libesd0-dev libwxgtk2.8-dev squashfs-tools build-essential zip curl \</span><br><span class="line">libncurses5-dev zlib1g-dev pngcrush schedtool libxml2 libxml2-utils \</span><br><span class="line">xsltproc lzop libc6-dev schedtool g++-multilib lib32z1-dev lib32ncurses5-dev \</span><br><span class="line">lib32readline-gplv2-dev gcc-multilib libswitch-perl</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> Ubuntu14.04，Android7.1</span><br><span class="line">sudo apt-get install git-core gnupg flex bison gperf libsdl1.2-dev \</span><br><span class="line">libesd0-dev libwxgtk2.8-dev squashfs-tools build-essential zip curl \</span><br><span class="line">libncurses5-dev zlib1g-dev pngcrush schedtool libxml2 libxml2-utils \</span><br><span class="line">xsltproc lzop libc6-dev schedtool g++-multilib lib32z1-dev lib32ncurses5-dev \</span><br><span class="line">lib32readline-gplv2-dev gcc-multilib libswitch-perl</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> Ubuntu16.04, 与14.04有所不同，此处只验证对Android6.0编译可用</span><br><span class="line">sudo apt-get install -y git flex bison gperf build-essential libncurses5-dev:i386 </span><br><span class="line">sudo apt-get install libx11-dev:i386 libreadline6-dev:i386 libgl1-mesa-dev g++-multilib </span><br><span class="line">sudo apt-get install tofrodos python-markdown libxml2-utils xsltproc zlib1g-dev:i386 </span><br><span class="line">sudo apt-get install dpkg-dev libsdl1.2-dev libesd0-dev</span><br><span class="line">sudo apt-get install git-core gnupg flex bison gperf build-essential  </span><br><span class="line">sudo apt-get install zip curl zlib1g-dev gcc-multilib g++-multilib </span><br><span class="line">sudo apt-get install libc6-dev-i386 </span><br><span class="line">sudo apt-get install lib32ncurses5-dev x11proto-core-dev libx11-dev </span><br><span class="line">sudo apt-get install lib32z-dev ccache</span><br><span class="line">sudo apt-get install libgl1-mesa-dev libxml2-utils xsltproc unzip m4</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 通用项，交叉编译工具链</span><br><span class="line">sudo apt-get install gcc-arm-linux-gnueabihf lzop libncurses5-dev libssl1.0.0 libssl-dev</span><br></pre></td></tr></table></figure></p>
<p>另，可以在 .bashrc文件末尾追加，提高编译效率<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo export USE_CCACHE=1 &gt;&gt; ~/.bashrc</span><br></pre></td></tr></table></figure></p>
<h1 id="Source-Code"><a href="#Source-Code" class="headerlink" title="Source Code"></a>Source Code</h1><h2 id="源码压缩包下载"><a href="#源码压缩包下载" class="headerlink" title="源码压缩包下载"></a>源码压缩包下载</h2><p>云盘地址：<br><a href="http://pan.baidu.com/s/1o7Cdilk#list/path=%2FPublic%2FDevBoard%2FFirefly-RK3399%2FSource%2FAndroid6.0&amp;parentPath=%2FPublic%2FDevBoard" target="_blank" rel="noopener">http://pan.baidu.com/s/1o7Cdilk#list/path=%2FPublic%2FDevBoard%2FFirefly-RK3399%2FSource%2FAndroid6.0&amp;parentPath=%2FPublic%2FDevBoard</a></p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 验证MD5</span><br><span class="line">md5sum /project/Firefly-RK3399_Android6.0_git_20170310.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 解压缩</span><br><span class="line">cd ~/project/firefly-rk3399</span><br><span class="line">tar xzvf Firefly-RK3399_Android6.0_git_20170218.tar.gz</span><br><span class="line"><span class="meta">#</span> 7z x /path/to/Firefly-RK3399_Android7.1.1_git_20170518.7z</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 还原代码</span><br><span class="line">git reset --hard</span><br></pre></td></tr></table></figure>
<h2 id="线上源码"><a href="#线上源码" class="headerlink" title="线上源码"></a>线上源码</h2><p>源码：<br><a href="https://gitlab.com/TeeFirefly/FireNow-Marshmallow/tree/Firefly_RK3399" target="_blank" rel="noopener">https://gitlab.com/TeeFirefly/FireNow-Marshmallow/tree/Firefly_RK3399</a></p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 都开始编译了才发现有线上源码是不是傻...</span><br><span class="line">git remote rm origin</span><br><span class="line">git remote add gitlab [https://gitlab.com/TeeFirefly/FireNow-Marshmallow.git](https://gitlab.com/TeeFirefly/FireNow-Marshmallow.git)</span><br><span class="line"><span class="meta">#</span> git remote add gitlab [https://gitlab.com/TeeFirefly/FireNow-Nougat.git](https://gitlab.com/TeeFirefly/FireNow-Nougat.git)</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 更新远程仓库</span><br><span class="line">git pull gitlab Firefly_RK3399:Firefly_RK3399</span><br></pre></td></tr></table></figure>
<h2 id="高速缓存"><a href="#高速缓存" class="headerlink" title="高速缓存"></a>高速缓存</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 设置编译器高速缓存,提高编译效率</span><br><span class="line">cd ~/workspace/RK3399</span><br><span class="line">prebuilts/misc/linux-x86/ccache/ccache -M 50G</span><br></pre></td></tr></table></figure>
<h1 id="编译前填坑"><a href="#编译前填坑" class="headerlink" title="编译前填坑"></a>编译前填坑</h1><h2 id="error-unsupported-reloc-43"><a href="#error-unsupported-reloc-43" class="headerlink" title="error: unsupported reloc 43"></a>error: unsupported reloc 43</h2><p>碰到报出一串error: unsupported reloc 43，尝试第一次修改。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># mydroid/art/build/Android.common_build.mk，定位到75行</span><br><span class="line">ifneq ($(WITHOUT_HOST_CLANG),true)</span><br><span class="line"># 改为</span><br><span class="line">ifeq ($(WITHOUT_HOST_CLANG),false)</span><br></pre></td></tr></table></figure></p>
<p>经过第一次修改之后发现编译还是报同样的错误，执行下面：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cp /usr/bin/ld.gold &lt;source_android&gt;/prebuilts/gcc/linux-x86/host/x86_64-linux-glibc2.11-4.6/x86_64-linux/bin/ld</span><br><span class="line">make update-api</span><br><span class="line">make...</span><br></pre></td></tr></table></figure></p>
<h2 id="others"><a href="#others" class="headerlink" title="others"></a>others</h2><p>其他坑参考的官方文档后基本不会碰上了，目前编译中断是因为cpu烧的停了。</p>
<h1 id="编译方式"><a href="#编译方式" class="headerlink" title="编译方式"></a>编译方式</h1><ul>
<li><p>官方编译脚本(发现的太晚…)</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd ~/project/firefly-rk3399/</span><br><span class="line">./FFTools/make.sh -k -j8    # 单独编译kernel</span><br><span class="line">./FFTools/make.sh -u -j8    # 单独编译uboot</span><br><span class="line">./FFTools/make.sh -a -j8    # 单独编译android上层</span><br><span class="line">./FFTools/make.sh -j8       # 同时编译ubooot、kernel、android</span><br></pre></td></tr></table></figure>
</li>
<li><p>手动编译</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">cd ~/project/firefly-rk3399/kernel/</span><br><span class="line">      </span><br><span class="line"><span class="meta">#</span> 编译kernel</span><br><span class="line">make ARCH=arm64 firefly_defconfig</span><br><span class="line">make -j8 ARCH=arm64 rk3399-firefly.img</span><br><span class="line">      </span><br><span class="line"><span class="meta">#</span> 编译uboot：</span><br><span class="line">make rk3399_box_defconfig</span><br><span class="line">make ARCHV=aarch64 -j8</span><br><span class="line">      </span><br><span class="line"><span class="meta">#</span> 编译android：</span><br><span class="line">source build/envsetup.sh</span><br><span class="line">lunch rk3399_firefly_box-userdebug</span><br><span class="line">make -j8</span><br><span class="line">./mkimage.sh</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>备注：8为同时编译的线程数，一般google推荐这个数字为2倍的cpu个数再加上2，比如4核，就是10。<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 查看CPU个数</span><br><span class="line">cat /proc/cpuinfo</span><br></pre></td></tr></table></figure></p>
<h1 id="编译错误记录"><a href="#编译错误记录" class="headerlink" title="编译错误记录"></a>编译错误记录</h1><p>记录下编译的注意点和错误。</p>
<h2 id="中断编译"><a href="#中断编译" class="headerlink" title="中断编译"></a>中断编译</h2><p>如果中断后重新编译，最好make clean后再编。</p>
<h2 id="bc-not-found"><a href="#bc-not-found" class="headerlink" title="bc not found"></a>bc not found</h2><p>编译kernel出现bc not found，[include/generated/timeconst.h] Error 127。<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install bc</span><br></pre></td></tr></table></figure></p>
<h2 id="Communication-error-with-Jack-server-52"><a href="#Communication-error-with-Jack-server-52" class="headerlink" title="Communication error with Jack server (52)"></a>Communication error with Jack server (52)</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> Error</span><br><span class="line">Building with Jack: out/target/common/obj/JAVA_LIBRARIES/android-support-transition-res_intermediates/classes.jack</span><br><span class="line">Communication error with Jack server (52). Try 'jack-diagnose'</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> Solution</span><br><span class="line">find . -name jack-admin</span><br><span class="line">export PATH=$PATH:~/proj/firefly-rk3399/prebuilts/sdk/tools</span><br><span class="line">jack-admin start-server</span><br><span class="line">export JACK_SERVER_VM_ARGUMENTS="-Dfile.encoding=UTF-8 -XX:+TieredCompilation -Xmx4096m"</span><br></pre></td></tr></table></figure>
<h2 id="directory-xxx-is-not-writable"><a href="#directory-xxx-is-not-writable" class="headerlink" title="directory xxx is not writable"></a>directory xxx is not writable</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> Error</span><br><span class="line">Property 'jack.dex.output.dir' (in Options): directory 'out/target/common/obj/JAVA_LIBRARIES/conscrypt_intermediates/jack-rsc' is not writable (required because 'jack.dex.output.container' (defined in Options) is set to 'dir')</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> Solution</span><br><span class="line">edit $HOME/.jack-server/config.properties</span><br><span class="line">and set jack.server.max-service=1</span><br></pre></td></tr></table></figure>
<h2 id="file-xxx-can-not-be-created"><a href="#file-xxx-can-not-be-created" class="headerlink" title="file xxx can not be created"></a>file xxx can not be created</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> Error</span><br><span class="line">[ 30% 15013/48677] build out/target/common/obj/JAVA_LIBRARIES/sdk_v9_intermediates/classes.jack</span><br><span class="line"></span><br><span class="line">FAILED: /bin/bash -c "(mkdir -p out/target/common/obj/JAVA_LIBRARIES/sdk_v9_intermediates/classes.jack.tmpjill.res ) &amp;&amp; (unzip -qo prebuilts/sdk/9/android.jar -d out/target/common/obj/JAVA_LIBRARIES/sdk_v9_intermediates/classes.jack.tmpjill.res ) &amp;&amp; (find out/target/common/obj/JAVA_LIBRARIES/sdk_v9_intermediates/classes.jack.tmpjill.res -iname \"*.class\" -delete ) &amp;&amp; (JACK_VERSION=3.36.CANDIDATE out/host/linux-x86/bin/jack @build/core/jack-default.args --verbose error -D jack.import.resource.policy=keep-first -D jack.import.type.policy=keep-first -D jack.android.min-api-level=1 --import prebuilts/sdk/9/android.jar --import-resource out/target/common/obj/JAVA_LIBRARIES/sdk_v9_intermediates/classes.jack.tmpjill.res --output-jack out/target/common/obj/JAVA_LIBRARIES/sdk_v9_intermediates/classes.jack ) &amp;&amp; (rm -rf out/target/common/obj/JAVA_LIBRARIES/sdk_v9_intermediates/classes.jack.tmpjill.res )"</span><br><span class="line"></span><br><span class="line">1 error during configuration. Try --help-properties for help.</span><br><span class="line"></span><br><span class="line">Property 'jack.library.output.zip' (in Options): file 'out/target/common/obj/JAVA_LIBRARIES/sdk_v9_intermediates/classes.jack' can not be created (required because 'jack.library' (defined in Options) is set to true and 'jack.library.output.container' (defined in Options) is set to 'zip')</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> Solution</span><br><span class="line">export ANDROID_JACK_VM_ARGS="-Dfile.encoding=UTF-8 -XX:+TieredCompilation -Xmx4096m"</span><br></pre></td></tr></table></figure>
<h2 id="‘atomic’-file-not-found"><a href="#‘atomic’-file-not-found" class="headerlink" title="‘atomic’ file not found"></a>‘atomic’ file not found</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> Error</span><br><span class="line">frameworks/native/include/binder/Binder.h:20:10: fatal error: 'atomic' file not found</span><br><span class="line"><span class="meta">#</span>include &lt;atomic&gt;</span><br><span class="line">^</span><br><span class="line">1 error generated.</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> Solution</span><br><span class="line">make clean and rebuild.</span><br></pre></td></tr></table></figure>
<h2 id="Cannot-allocate-memory"><a href="#Cannot-allocate-memory" class="headerlink" title="Cannot allocate memory"></a>Cannot allocate memory</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> Error</span><br><span class="line">[  9% 4800/48682] host C++: libart_32 &lt;= art/runtime/verifier/method_verifier.ccninja: fatal: fork: Cannot allocate memory</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> Solution</span><br><span class="line">解决，调低参数</span><br><span class="line"></span><br><span class="line">export JACK_SERVER_VM_ARGUMENTS="-Dfile.encoding=UTF-8 -XX:+TieredCompilation -Xmx4096m"</span><br><span class="line">export ANDROID_JACK_VM_ARGS="-Dfile.encoding=UTF-8 -XX:+TieredCompilation -Xmx4096m"</span><br></pre></td></tr></table></figure>
<h2 id="Waiting-for-unfinished-jobs"><a href="#Waiting-for-unfinished-jobs" class="headerlink" title="Waiting for unfinished jobs"></a>Waiting for unfinished jobs</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> Error</span><br><span class="line">make: *** [out/target/product/rk3399_firefly_box/obj/STATIC_LIBRARIES/libLLVMScalarOpts_intermediates/ADCE.o] Error 1</span><br><span class="line">make: *** Waiting for unfinished jobs....</span><br><span class="line"></span><br><span class="line">make: *** [out/target/product/rk3399_firefly_box/obj/STATIC_LIBRARIES/libLLVMObject_intermediates/IRObjectFile.o] Error 1</span><br><span class="line"></span><br><span class="line">make: *** [out/target/product/rk3399_firefly_box/obj/STATIC_LIBRARIES/libLLVMARMDisassembler_intermediates/ARMDisassembler.o] Error 1</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> Solution</span><br><span class="line">结束编译，clean后重编。</span><br></pre></td></tr></table></figure>
<h2 id="OTA编译失败"><a href="#OTA编译失败" class="headerlink" title="OTA编译失败"></a>OTA编译失败</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> Error</span><br><span class="line"></span><br><span class="line">No RK Loader for TARGET_DEVICE rk3288 to otapackage</span><br><span class="line">package add resource.img to BOOT and RECOVERY</span><br><span class="line">No uboot for uboot/uboot.img to otapackage</span><br><span class="line">No trust for uboot/trust.img to otapackage</span><br><span class="line">No charge for uboot/charge.img to otapackage</span><br><span class="line">No parameter for TARGET_DEVICE rk3288 to otapackage</span><br><span class="line">Package target files: out/target/product/rk3288/obj/PACKAGING/target_files_intermediates/rk3288-target_files-eng.guochongxin.zip</span><br><span class="line">building image from target_files RECOVERY...</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">File "./build/tools/releasetools/make_recovery_patch", line 68, in</span><br><span class="line">main(sys.argv[1:])</span><br><span class="line">File "./build/tools/releasetools/make_recovery_patch", line 39, in main</span><br><span class="line">input_dir, "RECOVERY")</span><br><span class="line">File "/home/guochongxin/rk/rk3288_5.1/build/tools/releasetools/common.py", line 411,in GetBootableImage</span><br><span class="line">info_dict)</span><br><span class="line">File "/home/guochongxin/rk/rk3288_5.1/build/tools/releasetools/common.py", line 365, in BuildBootableImage</span><br><span class="line">p4 = Run(sign_cmd)</span><br><span class="line">File "/home/guochongxin/rk/rk3288_5.1/build/tools/releasetools/common.py", line 86, in Run</span><br><span class="line">return subprocess.Popen(args, kwargs)</span><br><span class="line">File "/usr/lib/python2.7/subprocess.py", line 679, in init</span><br><span class="line">errread, errwrite)</span><br><span class="line">File "/usr/lib/python2.7/subprocess.py", line 1249, in _execute_child</span><br><span class="line">raise child_exception</span><br><span class="line">OSError: [Errno 2] No such file or directory</span><br><span class="line">make: * [out/target/product/rk3288/obj/PACKAGING/target_files_intermediates/rk3288-target_files-eng.guochongxin.zip] Error </span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> Solution</span><br><span class="line">drmsigntool没有编译进去，</span><br><span class="line"></span><br><span class="line">cd build/tools/drmsigntool/</span><br><span class="line">mm -B</span><br><span class="line">cd ~/workspace/RK3399</span><br><span class="line">make otapackage</span><br></pre></td></tr></table></figure>
<h1 id="打包固件"><a href="#打包固件" class="headerlink" title="打包固件"></a>打包固件</h1><ul>
<li><p>编译到打包</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">source build/envsetup.sh</span><br><span class="line">lunch rk3399_**</span><br><span class="line">./FFTools/make.sh -j12</span><br><span class="line">    </span><br><span class="line">./mkimge.sh ota</span><br><span class="line">make otapackage</span><br><span class="line"><span class="meta">#</span>[100% 234/234] 在out/target/product/xxxx/生成xxxx.zip本地OTA升级包</span><br><span class="line">    </span><br><span class="line"><span class="meta">#</span> 打包统一固件，rockdev/Image-rk3399_firefly_box/update.img</span><br><span class="line">./FFTools/mkupdate/mkupdate.sh update</span><br></pre></td></tr></table></figure>
</li>
<li><p>Windows下打包，不常用</p>
<ul>
<li>将编译生成的文件拷贝到 AndroidTool 的 rockdev\Image 目录中</li>
<li>然后运行 rockdev 目录下的 mkupdate.bat 批处理文件即可创建 update.img 并存放到 rockdev\Image 目录里。</li>
</ul>
</li>
</ul>
<h1 id="主要参考目录："><a href="#主要参考目录：" class="headerlink" title="主要参考目录："></a>主要参考目录：</h1><p><a href="[http://wiki.t-firefly.com/index.php/Firefly-RK3399/Build_android](http://wiki.t-firefly.com/index.php/Firefly-RK3399/Build_android">官方文档 Android 6.0</a>)</p>
<p><a href="http://wiki.t-firefly.com/index.php/Firefly-RK3399/Build_android_7.1" target="_blank" rel="noopener">官方文档 Android 7.1</a></p>
<p><a href="[http://www.linuxidc.com/Linux/2016-01/127292p2.htm](http://www.linuxidc.com/Linux/2016-01/127292p2.htm">Ubuntu14.04编译Android6.0</a>)</p>
]]></content>
      
        <categories>
            
            <category> 记录 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> android </tag>
            
            <tag> firefly </tag>
            
            <tag> rk3399 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hexo施工记录（二）]]></title>
      <url>/2016-07-12-Hexo%E6%96%BD%E5%B7%A5%E8%AE%B0%E5%BD%95(%E4%BA%8C)/</url>
      <content type="html"><![CDATA[<p>其二 主题篇<br>hexo，博客模板框架，基于nodejs。</p>
<a id="more"></a>
<h1 id="主题-Next"><a href="#主题-Next" class="headerlink" title="主题 - Next"></a>主题 - Next</h1><p>采用了iissnan的Next主题，<a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener">http://theme-next.iissnan.com/</a></p>
<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ cd sslyxhz.github.io</span><br><span class="line"># 法一</span><br><span class="line">$ git submodule add https://github.com/iissnan/hexo-theme-next themes/next</span><br><span class="line"># 法二</span><br><span class="line">git clone https://github.com/iissnan/hexo-theme-next themes/next</span><br><span class="line"></span><br><span class="line">cd themes/next</span><br><span class="line"># 备份主题配置文件_config.yml</span><br><span class="line">git pull</span><br></pre></td></tr></table></figure>
<h2 id="应用主题"><a href="#应用主题" class="headerlink" title="应用主题"></a>应用主题</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># themes/next/_config.yml</span><br><span class="line">theme: next</span><br></pre></td></tr></table></figure>
<h1 id="页面设置"><a href="#页面设置" class="headerlink" title="页面设置"></a>页面设置</h1><h2 id="标签页面"><a href="#标签页面" class="headerlink" title="标签页面"></a>标签页面</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd sslyxhz.github.io</span><br><span class="line">hexo new page tags</span><br></pre></td></tr></table></figure>
<p>内容如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 标签</span><br><span class="line">date: 2016-07-01 21:13:23</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">comments: false</span><br><span class="line">---</span><br></pre></td></tr></table></figure></p>
<h2 id="分类页面"><a href="#分类页面" class="headerlink" title="分类页面"></a>分类页面</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> cd myblog</span><br><span class="line"><span class="meta">$</span> hexo new page categories</span><br></pre></td></tr></table></figure>
<p>内容如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 分类</span><br><span class="line">date: 2016-07-01 21:17:56</span><br><span class="line">type: &quot;categories&quot;</span><br><span class="line">comments: false</span><br><span class="line">---</span><br></pre></td></tr></table></figure></p>
<h2 id="404页面"><a href="#404页面" class="headerlink" title="404页面"></a>404页面</h2><ul>
<li>新建页面：404.html</li>
<li>可用404公益：<a href="http://www.qq.com/404/" target="_blank" rel="noopener">http://www.qq.com/404/</a></li>
<li>404页面部署<ul>
<li>注，关于默认页面跳转404，在github上不生效，通过nginx来访问没有问题。</li>
<li>部署在github上则参考：<a href="https://help.github.com/articles/creating-a-custom-404-page-for-your-github-pages-site/" target="_blank" rel="noopener">https://help.github.com/articles/creating-a-custom-404-page-for-your-github-pages-site/</a></li>
</ul>
</li>
</ul>
<h1 id="评论模块"><a href="#评论模块" class="headerlink" title="评论模块"></a>评论模块</h1><p>Disqus要翻墙，畅言要备案，尝试Gitment。<br>Gitment使用Github Issues作为评论系统。</p>
<h2 id="OAuth-application注册接入"><a href="#OAuth-application注册接入" class="headerlink" title="OAuth application注册接入"></a>OAuth application注册接入</h2><p>地址：<a href="https://github.com/settings/applications/new" target="_blank" rel="noopener">https://github.com/settings/applications/new</a></p>
<ul>
<li>Application name：随意</li>
<li>Homepage URL：<a href="https://sslyxhz.github.io">https://sslyxhz.github.io</a></li>
<li>description: 随意</li>
<li>Authorization callback URL: <a href="https://sslyxhz.github.io">https://sslyxhz.github.io</a><blockquote>
<p>callback URL必须正确。</p>
<h2 id="主题配置"><a href="#主题配置" class="headerlink" title="主题配置"></a>主题配置</h2><p>主题Next已经支持Gitment，简单配置即可。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># themes/next/_config.yml</span><br><span class="line">gitment:</span><br><span class="line">  enable: true</span><br><span class="line">  lazy: false # Comments lazy loading with a button</span><br><span class="line">  github_user: sslyxhz # MUST HAVE, Your Github ID</span><br><span class="line">  github_repo: sslyxhz.github.io # MUST HAVE, The repo you use to store Gitment comments</span><br><span class="line">  client_id: xxxxxxxxxxxxxx # MUST HAVE, Github client id for the Gitment</span><br><span class="line">  client_secret: xxxxxxxxx # EITHER this or proxy_gateway, Github access secret token for the Gitment</span><br><span class="line">  ...</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
<h1 id="统计模块"><a href="#统计模块" class="headerlink" title="统计模块"></a>统计模块</h1><h2 id="谷歌统计"><a href="#谷歌统计" class="headerlink" title="谷歌统计"></a>谷歌统计</h2><ul>
<li>注册Google Analytics， <a href="http://www.google.cn/intl/zh-CN_ALL/analytics/learn/index.html" target="_blank" rel="noopener">http://www.google.cn/intl/zh-CN_ALL/analytics/learn/index.html</a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># _config.yml</span><br><span class="line">google_analytics: UA-[TrackingID]-1</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="搜索模块"><a href="#搜索模块" class="headerlink" title="搜索模块"></a>搜索模块</h1><h2 id="站内搜索"><a href="#站内搜索" class="headerlink" title="站内搜索"></a>站内搜索</h2><p>Swiftype等搜索存在试用期，使用Hexo集成的搜索引擎。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># /themes/next/_config.yml</span><br><span class="line">local_search:</span><br><span class="line">  enable: true</span><br><span class="line">  trigger: auto</span><br><span class="line">  # show top n results per article, show all results by setting to -1</span><br><span class="line">  top_n_per_article: 1</span><br></pre></td></tr></table></figure>
<h2 id="阅读次数、访问量等"><a href="#阅读次数、访问量等" class="headerlink" title="阅读次数、访问量等"></a>阅读次数、访问量等</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># /themes/next/_config.yml</span><br><span class="line">busuanzi_count:</span><br><span class="line">  enable: true</span><br><span class="line">  site_uv: true</span><br><span class="line">  site_uv_header: &lt;i class=&quot;fa fa-user&quot;&gt;&lt;/i&gt; 访问人数</span><br><span class="line">  site_uv_footer:</span><br><span class="line">  site_pv: true</span><br><span class="line">  site_pv_header: &lt;i class=&quot;fa fa-eye&quot;&gt;&lt;/i&gt; 总访问量</span><br><span class="line">  site_pv_footer: 次</span><br><span class="line">  page_pv: true</span><br><span class="line">  page_pv_header: &lt;i class=&quot;fa fa-file-o&quot;&gt;&lt;/i&gt; 浏览</span><br><span class="line">  page_pv_footer: 次</span><br></pre></td></tr></table></figure>
<h2 id="友情链接"><a href="#友情链接" class="headerlink" title="友情链接"></a>友情链接</h2><p>TODO</p>
<h2 id="域名指向"><a href="#域名指向" class="headerlink" title="域名指向"></a>域名指向</h2><p>TODO</p>
]]></content>
      
        <categories>
            
            <category> 记录 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> software </tag>
            
            <tag> hexo </tag>
            
            <tag> 挖坑 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hexo施工记录（一）]]></title>
      <url>/2016-07-01-Hexo%E6%96%BD%E5%B7%A5%E8%AE%B0%E5%BD%95(%E4%B8%80)/</url>
      <content type="html"><![CDATA[<p>其一 安装篇<br>hexo，博客模板框架，基于nodejs。</p>
<a id="more"></a>
<h1 id="前置工作"><a href="#前置工作" class="headerlink" title="前置工作"></a>前置工作</h1><h2 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h2><ul>
<li>Git（<a href="http://git-scm.com/download/）" target="_blank" rel="noopener">http://git-scm.com/download/）</a></li>
<li>nodejs（<a href="https://nodejs.org/en/）" target="_blank" rel="noopener">https://nodejs.org/en/）</a></li>
</ul>
<h2 id="配置Git"><a href="#配置Git" class="headerlink" title="配置Git"></a>配置Git</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 配置用户名和邮件</span><br><span class="line"><span class="meta">$</span> git config --global user.name "sslyxhz"</span><br><span class="line"><span class="meta">$</span> git config --global user.email "sslyxhz@hotmail.com"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 创建SSH Key</span><br><span class="line"><span class="meta">$</span> ssh-keygen -t rsa -C "sslyxhz@hotmail.com"</span><br></pre></td></tr></table></figure>
<p>登陆GitHub-&gt;Settings-&gt;“SSH Keys”-&gt;“Add SSH Key”</p>
<h1 id="安装设置"><a href="#安装设置" class="headerlink" title="安装设置"></a>安装设置</h1><h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> Hexo主体</span><br><span class="line">mkdir sslyxhz.github.io</span><br><span class="line">cd sslyxhz.github.io</span><br><span class="line">npm install -g hexo-cli</span><br><span class="line">npm install hexo --save</span><br></pre></td></tr></table></figure>
<h2 id="Hexo插件"><a href="#Hexo插件" class="headerlink" title="Hexo插件"></a>Hexo插件</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-index --save</span><br><span class="line">npm install hexo-generator-archive --save</span><br><span class="line">npm install hexo-generator-category --save</span><br><span class="line">npm install hexo-generator-tag --save</span><br><span class="line">npm install hexo-generator-feed --save</span><br><span class="line">npm install hexo-server --save</span><br><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">npm install hexo-deployer-heroku --save</span><br><span class="line">npm install hexo-deployer-rsync --save</span><br><span class="line">npm install hexo-deployer-openshift --save</span><br><span class="line">npm install hexo-renderer-marked --save</span><br><span class="line">npm install hexo-renderer-stylus --save</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 部署插件（推荐，git形式备份blog源码）</span><br><span class="line">npm install git+git@github.com:hexojs/hexo-deployer-git.git --save</span><br></pre></td></tr></table></figure>
<h2 id="参数说明"><a href="#参数说明" class="headerlink" title="参数说明"></a>参数说明</h2><ul>
<li>–save，将依赖保存到根目录package.json，以后执行npm install即可自动下载package.json中的所有依赖</li>
</ul>
<h2 id="错误情况"><a href="#错误情况" class="headerlink" title="错误情况"></a>错误情况</h2><ul>
<li>npm WARN notsup Not compatible with your operating system or architecture: fsevents@1.1.2<ul>
<li>尝试加上参数–no-optional解决，形如：npm install xxx –no-optional</li>
</ul>
</li>
</ul>
<h1 id="运行部署"><a href="#运行部署" class="headerlink" title="运行部署"></a>运行部署</h1><h2 id="基础运行"><a href="#基础运行" class="headerlink" title="基础运行"></a>基础运行</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 生成静态站点文件</span><br><span class="line">hexo generate</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 运行服务器 默认访问站点: http://localhost:4000</span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure>
<h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><p>部署前需要设置根目录的配置文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># _config.yml</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https://github.com/sslyxhz/sslyxhz.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure></p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 部署命令</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure>
<h1 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h1><h2 id="新建博文"><a href="#新建博文" class="headerlink" title="新建博文"></a>新建博文</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new [layout] &quot;postName&quot;</span><br></pre></td></tr></table></figure>
<p>layout：查看scaffolds目录</p>
<table>
<thead>
<tr>
<th>Layout</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>post</td>
<td>默认</td>
</tr>
<tr>
<td>page</td>
<td>页面</td>
</tr>
<tr>
<td>draft</td>
<td>草稿</td>
</tr>
</tbody>
</table>
<h2 id="命令缩写"><a href="#命令缩写" class="headerlink" title="命令缩写"></a>命令缩写</h2><ul>
<li>hexo n == hexo new</li>
<li>hexo g == hexo generate</li>
<li>hexo s == hexo server</li>
<li>hexo d == hexo deploy</li>
</ul>
<h2 id="复合命令"><a href="#复合命令" class="headerlink" title="复合命令"></a>复合命令</h2><ul>
<li>hexo deploy -g</li>
<li>hexo server -g</li>
</ul>
<h1 id="插件拾遗"><a href="#插件拾遗" class="headerlink" title="插件拾遗"></a>插件拾遗</h1><h2 id="git-git部署（推荐）"><a href="#git-git部署（推荐）" class="headerlink" title="git+git部署（推荐）"></a>git+git部署（推荐）</h2><p>通过git发布页面内容和备份blog源码，经过一步hexo d发布到位。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 安装插件</span><br><span class="line">npm install git+git@github.com:hexojs/hexo-deployer-git.git --save</span><br></pre></td></tr></table></figure>
<p>调整根目录配置文件，将源码备份到src分支：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># _config.yaml</span><br><span class="line">deploy:</span><br><span class="line">  - type: git</span><br><span class="line">    repo: git@github.com:&lt;username&gt;/&lt;username&gt;.github.io.git</span><br><span class="line">    branch: master</span><br><span class="line">  - type: git</span><br><span class="line">    repo: git@github.com:&lt;username&gt;/&lt;username&gt;.github.io.git</span><br><span class="line">    branch: src</span><br><span class="line">    extend_dirs: /</span><br><span class="line">    ignore_hidden: false</span><br><span class="line">    ignore_pattern:</span><br><span class="line">        public: .</span><br></pre></td></tr></table></figure></p>
<p>参考：<a href="https://github.com/hexojs/hexo-deployer-git" target="_blank" rel="noopener">https://github.com/hexojs/hexo-deployer-git</a><br>备注：当无法推送成功时，尝试删除.deploy_git目录，重新部署。</p>
<h2 id="后台管理（可选）"><a href="#后台管理（可选）" class="headerlink" title="后台管理（可选）"></a>后台管理（可选）</h2><p>配置后台管理插件，直接通过web页面管理编辑博客信息。<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-admin</span><br><span class="line">hexo server -d</span><br><span class="line">open http://localhost:4000/admin/</span><br></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># _config.yml</span><br><span class="line">admin:</span><br><span class="line">  username: myfavoritename</span><br><span class="line">  password_hash: be121740bf988b2225a313fa1f107ca1</span><br><span class="line">  secret: a secret something</span><br></pre></td></tr></table></figure>
<p>参考：<a href="https://github.com/jaredly/hexo-admin" target="_blank" rel="noopener">https://github.com/jaredly/hexo-admin</a></p>
<h2 id="资源贴图"><a href="#资源贴图" class="headerlink" title="资源贴图"></a>资源贴图</h2><ol>
<li><p>调整配置</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># _config.yml</span><br><span class="line">  post_asset_folder: true</span><br></pre></td></tr></table></figure>
</li>
<li><p>安装插件</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-asset-image --save</span><br></pre></td></tr></table></figure>
</li>
<li><p>引用图片</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![new_year](new_year.jpg)</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="图床贴图"><a href="#图床贴图" class="headerlink" title="图床贴图"></a>图床贴图</h2><p>插件：七牛云<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-admin-qiniu</span><br></pre></td></tr></table></figure></p>
<p><a href="https://github.com/xbotao/hexo-admin-qiniu" target="_blank" rel="noopener">https://github.com/xbotao/hexo-admin-qiniu</a><br><a href="https://xbotao.github.io/hexo-admin-qiniu/" target="_blank" rel="noopener">https://xbotao.github.io/hexo-admin-qiniu/</a></p>
<h2 id="轮播图"><a href="#轮播图" class="headerlink" title="轮播图"></a>轮播图</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># Fancybox</span><br><span class="line">---</span><br><span class="line">title: Hexo施工记录（一）</span><br><span class="line">date: 2016-07-01 20:58:56</span><br><span class="line">photos:</span><br><span class="line">- https://78.media.tumblr.com/be85ef76868a71471b946247f025d835/tumblr_osv3pcQfz81slhhf0o1_1280.jpg</span><br><span class="line">- https://78.media.tumblr.com/910a65ded4a7e13c807e43b1bc3edbae/tumblr_oqnsfaw6MN1slhhf0o1_1280.jpg</span><br><span class="line">---</span><br></pre></td></tr></table></figure>
<h2 id="RSS"><a href="#RSS" class="headerlink" title="RSS"></a>RSS</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-feed</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># themes\next_config.yml</span><br><span class="line">rss：</span><br></pre></td></tr></table></figure>
<p>启动服务器，查看 <a href="http://localhost:4000/atom.xml" target="_blank" rel="noopener">http://localhost:4000/atom.xml</a></p>
<h2 id="Sitemap"><a href="#Sitemap" class="headerlink" title="Sitemap"></a>Sitemap</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-sitemap</span><br></pre></td></tr></table></figure>
<p>启动服务器，查看 <a href="http://localhost:4000/sitemap.xml" target="_blank" rel="noopener">http://localhost:4000/sitemap.xml</a></p>
<h2 id="顺序图和流程图"><a href="#顺序图和流程图" class="headerlink" title="顺序图和流程图"></a>顺序图和流程图</h2><h3 id="安装插件："><a href="#安装插件：" class="headerlink" title="安装插件："></a>安装插件：</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-filter-sequence</span><br><span class="line">npm install --save hexo-filter-flowchart</span><br></pre></td></tr></table></figure>
<h3 id="配置选项："><a href="#配置选项：" class="headerlink" title="配置选项："></a>配置选项：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"># 配置hexo目录下，而非主题下的_config.yml</span><br><span class="line"></span><br><span class="line">sequence:</span><br><span class="line">  # webfont:     # optional, the source url of webfontloader.js</span><br><span class="line">  # snap:        # optional, the source url of snap.svg.js</span><br><span class="line">  # underscore:  # optional, the source url of underscore.js</span><br><span class="line">  # sequence:    # optional, the source url of sequence-diagram.js</span><br><span class="line">  # css: # optional, the url for css, such as hand drawn theme </span><br><span class="line">  options: </span><br><span class="line">    theme: </span><br><span class="line">    css_class: </span><br><span class="line"></span><br><span class="line">flowchart:</span><br><span class="line">  # raphael:   # optional, the source url of raphael.js</span><br><span class="line">  # flowchart: # optional, the source url of flowchart.js</span><br><span class="line">  options: # options used for `drawSVG`</span><br></pre></td></tr></table></figure>
<h3 id="简单示例"><a href="#简单示例" class="headerlink" title="简单示例"></a>简单示例</h3><p>参考源码说明：</p>
<ul>
<li><a href="https://github.com/bubkoo/hexo-filter-sequence" target="_blank" rel="noopener">sequence</a></li>
<li><a href="https://github.com/bubkoo/hexo-filter-flowchart" target="_blank" rel="noopener">flowchart</a></li>
</ul>
]]></content>
      
        <categories>
            
            <category> 记录 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> software </tag>
            
            <tag> hexo </tag>
            
            <tag> 挖坑 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Markdown简单入门]]></title>
      <url>/2016-05-23-Markdown%E7%AE%80%E5%8D%95%E5%85%A5%E9%97%A8/</url>
      <content type="html"><![CDATA[<p>Markdown的目标是易读易写。在此简单记录markdown的使用语法。</p>
<a id="more"></a>
<h1 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h1><p>使用井号+空格标注标题级别。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 1级标题</span><br><span class="line">## 2级标题</span><br></pre></td></tr></table></figure></p>
<h1 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 粗体字，主要用作强调</span><br><span class="line">**粗体字**</span><br><span class="line"></span><br><span class="line"># 斜体字，主要作为书名等</span><br><span class="line">*斜体字*</span><br></pre></td></tr></table></figure>
<p>效果如下：</p>
<p><strong>粗体字</strong></p>
<p><em>斜体字</em></p>
<h1 id="换行"><a href="#换行" class="headerlink" title="换行"></a>换行</h1><p>要在文本插入换行符号，需要在行末插入两个以上的空格再回车。</p>
<h1 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h1><h2 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h2><p>对无序列表来说+、-、*的效果相同。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- Item1</span><br><span class="line">+ Item2</span><br><span class="line">* Item3</span><br></pre></td></tr></table></figure></p>
<p>效果如下：</p>
<ul>
<li>Item1</li>
</ul>
<ul>
<li>Item2</li>
</ul>
<ul>
<li>Item3</li>
</ul>
<h2 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h2><p>前缀加上1.，需要有空格。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1. Item1</span><br><span class="line">2. Item2</span><br></pre></td></tr></table></figure></p>
<ol>
<li>Item1</li>
<li>Item2</li>
</ol>
<h1 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h1><h2 id="一般引用"><a href="#一般引用" class="headerlink" title="一般引用"></a>一般引用</h2><p>引用，前缀符号为 &gt;  ，可以嵌套使用。</p>
<blockquote>
<p>引用内容1</p>
<blockquote>
<p>引用内容1-1  </p>
</blockquote>
<p>引用内容2</p>
</blockquote>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>代码框，符号为 `</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`  some code `</span><br></pre></td></tr></table></figure>
<p>效果如下：<br><code>some code</code></p>
<h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[链接文字](链接地址)  </span><br><span class="line">[图片链接](https://i2.hdslb.com/bfs/face/a6f243d8374c623271cad03f0c105ae76e47a004.jpg)  </span><br><span class="line">![图片](https://i2.hdslb.com/bfs/face/a6f243d8374c623271cad03f0c105ae76e47a004.jpg)</span><br></pre></td></tr></table></figure>
<p><a href="https://i2.hdslb.com/bfs/face/a6f243d8374c623271cad03f0c105ae76e47a004.jpg" target="_blank" rel="noopener">图片链接</a><br><img src="https://i2.hdslb.com/bfs/face/a6f243d8374c623271cad03f0c105ae76e47a004.jpg" alt="图片">  </p>
<h1 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| Tables        | Are           | Cool  |</span><br><span class="line">|      ----     |  :----:       |  ----:|</span><br><span class="line">| col 3 is      | right-aligned | $1600 |</span><br><span class="line">| col 2 is      | centered      |   $12 |</span><br><span class="line">| zebra stripes | are neat      |    $1 |</span><br></pre></td></tr></table></figure>
<p>效果如下：  </p>
<table>
<thead>
<tr>
<th>Tables</th>
<th style="text-align:center">Are</th>
<th style="text-align:right">Cool</th>
</tr>
</thead>
<tbody>
<tr>
<td>col 3 is</td>
<td style="text-align:center">right-aligned</td>
<td style="text-align:right">$1600</td>
</tr>
<tr>
<td>col 2 is</td>
<td style="text-align:center">centered</td>
<td style="text-align:right">$12</td>
</tr>
<tr>
<td>zebra stripes</td>
<td style="text-align:center">are neat</td>
<td style="text-align:right">$1</td>
</tr>
</tbody>
</table>
<h1 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h1><p>下述符号都能被解释为分割线。  </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">* * *</span><br><span class="line">***</span><br><span class="line">*****</span><br><span class="line">- - -</span><br><span class="line">---------------------------------------</span><br></pre></td></tr></table></figure>
<h1 id="作图"><a href="#作图" class="headerlink" title="作图"></a>作图</h1><p>绘制顺序图和流程图需要有插件支持。</p>
<h2 id="顺序图"><a href="#顺序图" class="headerlink" title="顺序图"></a>顺序图</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Alice-&gt;Bob: Hello Bob, how are you?</span><br><span class="line">Note right of Bob: Bob thinks</span><br><span class="line">Bob--&gt;Alice: I am good thanks!</span><br></pre></td></tr></table></figure>
<p><div id="sequence-0"></div></p>
<h2 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">st=&gt;start: Start|past:&gt;http://www.google.com[blank]</span><br><span class="line">e=&gt;end: End:&gt;http://www.google.com</span><br><span class="line">op1=&gt;operation: My Operation|past</span><br><span class="line">op2=&gt;operation: Stuff|current</span><br><span class="line">sub1=&gt;subroutine: My Subroutine|invalid</span><br><span class="line">cond=&gt;condition: Yes</span><br><span class="line">or No?|approved:&gt;http://www.google.com</span><br><span class="line">c2=&gt;condition: Good idea|rejected</span><br><span class="line">io=&gt;inputoutput: catch something...|request</span><br><span class="line"></span><br><span class="line">st-&gt;op1(right)-&gt;cond</span><br><span class="line">cond(yes, right)-&gt;c2</span><br><span class="line">cond(no)-&gt;sub1(left)-&gt;op1</span><br><span class="line">c2(yes)-&gt;io-&gt;e</span><br><span class="line">c2(no)-&gt;op2-&gt;e</span><br></pre></td></tr></table></figure>
<p><div id="flowchart-0" class="flow-chart"></div><script src="https://cdnjs.cloudflare.com/ajax/libs/raphael/2.2.7/raphael.min.js"></script><script src="https://cdnjs.cloudflare.com/ajax/libs/flowchart/1.6.5/flowchart.min.js"></script><textarea id="flowchart-0-code" style="display: none">st=>start: Start|past:>http://www.google.com[blank]
e=>end: End:>http://www.google.com
op1=>operation: My Operation|past
op2=>operation: Stuff|current
sub1=>subroutine: My Subroutine|invalid
cond=>condition: Yes
or No?|approved:>http://www.google.com
c2=>condition: Good idea|rejected
io=>inputoutput: catch something...|request

st->op1(right)->cond
cond(yes, right)->c2
cond(no)->sub1(left)->op1
c2(yes)->io->e
c2(no)->op2->e</textarea><textarea id="flowchart-0-options" style="display: none">{"theme":"simple","scale":1,"line-width":2,"line-length":50,"text-margin":10,"font-size":12}</textarea><script>  var code = document.getElementById("flowchart-0-code").value;  var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-0-options").value));  var diagram = flowchart.parse(code);  diagram.drawSVG("flowchart-0", options);</script><script src="https://cdnjs.cloudflare.com/ajax/libs/webfont/1.6.27/webfontloader.js"></script><script src="https://cdnjs.cloudflare.com/ajax/libs/snap.svg/0.4.1/snap.svg-min.js"></script><script src="https://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.8.3/underscore-min.js"></script><script src="https://cdnjs.cloudflare.com/ajax/libs/js-sequence-diagrams/1.0.6/sequence-diagram-min.js"></script><textarea id="sequence-0-code" style="display: none">Alice->Bob: Hello Bob, how are you?
Note right of Bob: Bob thinks
Bob-->Alice: I am good thanks!</textarea><textarea id="sequence-0-options" style="display: none">{"theme":"simple","scale":1,"line-width":2,"line-length":50,"text-margin":10,"font-size":12}</textarea><script>  var code = document.getElementById("sequence-0-code").value;  var options = JSON.parse(decodeURIComponent(document.getElementById("sequence-0-options").value));  var diagram = Diagram.parse(code);  diagram.drawSVG("sequence-0", options);</script></p>
]]></content>
      
        <categories>
            
            <category> 记录 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> markdown </tag>
            
            <tag> 语法 </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
